
//need to make this so it prints out 3 full ingredientType node's info in lists / rows
//			INGREDIENT TYPE 1				INGREDIENT TYPE 2				INGREDIENT TYPE 3
//			Type1.1 : 133.45g/cup			Type2.1 : 199.53g/tbsp			Type3.1 : 334.22g/cup
//			Type1.2 : 234.93g/cup			Type2.2 : 233.34g/tbsp			Type3.2 : 213.58g/cup

/********************************************************************************************************************
* 																													*
*	 			prints all the ingredientItem nodes stored in all ingredientType nodes					 			*
*																													*
*********************************************************************************************************************/
void printAllIngredientItems(struct ingredientType *head){
	struct ingredientType *print1 = head;
	struct ingredientType *print2 = NULL;
	struct ingredientType *print3 = NULL;
	
	
	
}






//need to change this in the search and delete functions to not be scanf() to prevent scanf() buffer overflow vulnerability
//use fgets() input into a buffer I control then parse the buffer with sscanf() or strtoi() and use that as input
if ((scanf(" %i", &ingredientItemChoice) != 1) || 
	       	   ((ingredientItemChoice <= 0) || (ingredientItemChoice > ingredientItemCounter))){
	       			printf("\t\tInvalid Entry\n");
	       			while (getchar() != '\n')
	           			;
	        }
	        
	        
	        
//characters to print out "¾  ⅔  ½  ⅓  ¼"	        
printf("%c%c  %c%c%c  %c%c  %c%c%c  %c%c",  0xC2, 0xBE,   0xE2, 0x85, 0x94,   0xC2, 0xBD,   0xE2, 0x85, 0x93,   0xC2, 0xBC);